@using Sandbox;
@using Sandbox.UI;
@using System.Linq;
@using System.Collections.Generic;
@inherits PanelComponent

<root>
	<div class="left">
		<div class="score">
			<div class="highscore">
				<h1>Highscore:</h1>
				<p>@($"{manager.HighScore:n0}")</p>
			</div>
		</div>
		<div class="leaderboard">
			@if(manager.Leaderboard is not null)
			{
				<h1>LEADERBOARD</h1>
				<div class="entries">
					@foreach(var entry in manager.Leaderboard.Entries)
					{
						<div class="entry @IsMe(entry)">
							<div class="rank">@entry.Rank</div>
							<div class="name">
								<image texture=@AvatarTexture(entry)/>
								<label>@entry.DisplayName</label>
							</div>
							<div class="value">@entry.FormattedValue</div>
						</div>
					}
				</div>
			}
		</div>
	</div>
	
	<div class="right">
		<div class="title">SURVIVE TERRY</div>


		<div class="themeHolder">
			Theme
			<DropDown @ref=Themes></DropDown>
		</div>

		<button @onclick=@StartGame>Start Game</button>
	</div>
	

</root>

@code
{
	[Property] Manager manager { get; set; }

	[Property] SceneFile GameScene { get; set; }

	DropDown Themes { get; set; }

	protected override void OnEnabled()
	{
		base.OnEnabled();

	}

	void StartGame()
	{
		Log.Info("test");
		FileSystem.Data.WriteAllText("player.txt", Themes.Selected.Value.ToString());
		GameManager.ActiveScene.Load(GameScene);
	}

	protected override void OnTreeFirstBuilt()
	{
		base.OnTreeFirstBuilt();
		Themes.Options = new()
		{
			new Option("Default", 1),
			new Option("Grass", 2),
			new Option("Stone", 3),
		};
		Themes.Selected = Themes.Options.First();
	}


	string IsMe(Sandbox.Services.Leaderboards.Entry entry)
	{
        return entry.Me ? "me" : "";
    }

	string AvatarTexture(Sandbox.Services.Leaderboards.Entry entry)
    {
        return $"avatar:{entry.SteamId}";
    }

	protected override int BuildHash() => System.HashCode.Combine(  manager.Score, manager.HighScore, Themes.GetHashCode() );
}
